{
  "openapi": "3.0.3",
  "info": {
    "title": "Binar Challenge Chapter-8",
    "description": "Binar academy FSW challenge chapter-8 following repository https://github.com/berbinarbinar/binar-challenge-chapter-8",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "apiteam@swagger.io"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.11"
  },
  "servers": [
    {
      "url": "http://localhost:4000"
    }
  ],
  "tags": [
    {
      "name": "players",
      "description": "manages data players"
    }
  ],
  "paths": {
    "/players": {
      "get": {
        "tags": [
          "players"
        ],
        "summary": "Get Data Players with or without Params",
        "operationId": "getPlayers",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "email"
            }
          },
          {
            "name": "experience",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "lvl",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfull to get data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Success"
                    },
                    "data": {
                      "$ref": "#/components/schemas/player"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Some error while retrieving data"
          }
        }
      },
      "post": {
        "tags": [
          "players"
        ],
        "summary": "Create Data New Player",
        "operationId": "createPlayer",
        "requestBody": {
          "description": "Create new player",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/createPlayer"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/createPlayer"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/createPlayer"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successfull to create new data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Success"
                    },
                    "data": {
                      "$ref": "#/components/schemas/player"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Failed"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid input"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/players/{id}": {
      "get": {
        "tags": [
          "players"
        ],
        "summary": "Get Data Player by ID",
        "operationId": "getPlayerById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "player ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfull to get data player",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Success"
                    },
                    "data": {
                      "$ref": "#/components/schemas/player"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Player not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Not found"
                    },
                    "message": {
                      "type": "string",
                      "example": "Player with ID 10 not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "players"
        ],
        "summary": "Update Existing Data Player by ID",
        "operationId": "updatePlayer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "player ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Update an Existing Data Player by ID",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/updatePlayer"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/updatePlayer"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/updatePlayer"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfull to get data player",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Success"
                    },
                    "data": {
                      "$ref": "#/components/schemas/player"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Player not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Not found"
                    },
                    "message": {
                      "type": "string",
                      "example": "Player with ID {id} not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Failed to update",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Failed"
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to update"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "players"
        ],
        "summary": "Delete Data Player by ID",
        "operationId": "deletePlayer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "player ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfull to delete data player",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Player with ID {id}, was deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to delete",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Failed"
                    },
                    "message": {
                      "type": "string",
                      "example": "Cannot delete player with ID {id}, maybe player was not found!"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/players/exp/{id}": {
      "post": {
        "tags": [
          "players"
        ],
        "summary": "Update Data Player Experience",
        "operationId": "updateExperience",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "player ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Update Data Player Experience",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/playerExp"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/playerExp"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/playerExp"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfull to update player experience",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Player with ID {id} gain {exp} experience. Total experience = {player.experience}"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to update",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Failed"
                    },
                    "message": {
                      "type": "string",
                      "example": "Cannot update player with ID {id}!"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Player not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Not found"
                    },
                    "message": {
                      "type": "string",
                      "example": "Player with ID {id} not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "player": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "username": {
            "type": "string",
            "example": "PussySlayer613"
          },
          "email": {
            "type": "string",
            "example": "pussy.slay3r@gmail.com"
          },
          "password": {
            "type": "string"
          },
          "experience": {
            "type": "integer",
            "format": "int64",
            "example": 600000
          },
          "lvl": {
            "type": "integer",
            "format": "int64",
            "example": 600
          },
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          }
        },
        "xml": {
          "name": "player"
        }
      },
      "playerExp": {
        "required": [
          "exp"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "exp": {
            "type": "integer",
            "format": "int64",
            "example": 600000
          }
        },
        "xml": {
          "name": "exp"
        }
      },
      "createPlayer": {
        "required": [
          "username email password"
        ],
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "PussySlayer613"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "pussy.slay3r@gmail.com"
          },
          "password": {
            "type": "string"
          },
          "experience": {
            "type": "integer",
            "format": "int64",
            "example": 600000
          }
        }
      },
      "updatePlayer": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "PussySlayer613"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "pussy.slay3r@gmail.com"
          },
          "password": {
            "type": "string"
          },
          "experience": {
            "type": "integer",
            "format": "int64",
            "example": 600000
          },
          "lvl": {
            "type": "integer",
            "format": "int64",
            "example": 600
          }
        }
      }
    }
  }
}